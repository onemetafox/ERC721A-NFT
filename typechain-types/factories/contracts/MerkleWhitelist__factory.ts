/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleWhitelist,
  MerkleWhitelistInterface,
} from "../../contracts/MerkleWhitelist";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "mouseWhitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicWhitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMouseWhitelistMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setPublicWhitelistMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyMouseSender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyPublicSender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d818061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ced0680b11610066578063ced0680b14610137578063cf4090dc14610153578063da0f271e14610183578063f2fde38b1461019f578063f33b7e92146101bb5761009e565b806307b7324c146100a35780631f8929b6146100d3578063715018a6146100f15780638da5cb5b146100fb578063b5e8b29014610119575b600080fd5b6100bd60048036038101906100b8919061082a565b6101d9565b6040516100ca91906109a0565b60405180910390f35b6100db6101f8565b6040516100e891906109bb565b60405180910390f35b6100f96101fe565b005b610103610286565b6040516101109190610985565b60405180910390f35b6101216102af565b60405161012e91906109bb565b60405180910390f35b610151600480360381019061014c919061087e565b6102b5565b005b61016d6004803603810190610168919061082a565b61033b565b60405161017a91906109a0565b60405180910390f35b61019d6004803603810190610198919061087e565b61035a565b005b6101b960048036038101906101b49190610801565b6103e0565b005b6101c36104d8565b6040516101d091906109d6565b60405180910390f35b60006101f0826101e885610566565b600254610596565b905092915050565b60015481565b6102066105ac565b73ffffffffffffffffffffffffffffffffffffffff16610224610286565b73ffffffffffffffffffffffffffffffffffffffff161461027a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027190610a18565b60405180910390fd5b61028460006105b4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b6102bd6105ac565b73ffffffffffffffffffffffffffffffffffffffff166102db610286565b73ffffffffffffffffffffffffffffffffffffffff1614610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032890610a18565b60405180910390fd5b8060028190555050565b60006103528261034a85610566565b600154610596565b905092915050565b6103626105ac565b73ffffffffffffffffffffffffffffffffffffffff16610380610286565b73ffffffffffffffffffffffffffffffffffffffff16146103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610a18565b60405180910390fd5b8060018190555050565b6103e86105ac565b73ffffffffffffffffffffffffffffffffffffffff16610406610286565b73ffffffffffffffffffffffffffffffffffffffff161461045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045390610a18565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c3906109f8565b60405180910390fd5b6104d5816105b4565b50565b600380546104e590610b2a565b80601f016020809104026020016040519081016040528092919081815260200182805461051190610b2a565b801561055e5780601f106105335761010080835404028352916020019161055e565b820191906000526020600020905b81548152906001019060200180831161054157829003601f168201915b505050505081565b600081604051602001610579919061096a565b604051602081830303815290604052805190602001209050919050565b60006105a3848385610678565b90509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600082610685858461068f565b1490509392505050565b60008082905060005b845181101561071f5760008582815181106106dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508083116106fe576106f7838261072a565b925061070b565b610708818461072a565b92505b50808061071790610b8d565b915050610698565b508091505092915050565b600082600052816020526040600020905092915050565b600061075461074f84610a5d565b610a38565b9050808382526020820190508285602086028201111561077357600080fd5b60005b858110156107a3578161078988826107ec565b845260208401935060208301925050600181019050610776565b5050509392505050565b6000813590506107bc81610d1d565b92915050565b600082601f8301126107d357600080fd5b81356107e3848260208601610741565b91505092915050565b6000813590506107fb81610d34565b92915050565b60006020828403121561081357600080fd5b6000610821848285016107ad565b91505092915050565b6000806040838503121561083d57600080fd5b600061084b858286016107ad565b925050602083013567ffffffffffffffff81111561086857600080fd5b610874858286016107c2565b9150509250929050565b60006020828403121561089057600080fd5b600061089e848285016107ec565b91505092915050565b6108b081610aa5565b82525050565b6108c76108c282610aa5565b610bd6565b82525050565b6108d681610ab7565b82525050565b6108e581610ac3565b82525050565b60006108f682610a89565b6109008185610a94565b9350610910818560208601610af7565b61091981610c87565b840191505092915050565b6000610931602683610a94565b915061093c82610ca5565b604082019050919050565b6000610954602083610a94565b915061095f82610cf4565b602082019050919050565b600061097682846108b6565b60148201915081905092915050565b600060208201905061099a60008301846108a7565b92915050565b60006020820190506109b560008301846108cd565b92915050565b60006020820190506109d060008301846108dc565b92915050565b600060208201905081810360008301526109f081846108eb565b905092915050565b60006020820190508181036000830152610a1181610924565b9050919050565b60006020820190508181036000830152610a3181610947565b9050919050565b6000610a42610a53565b9050610a4e8282610b5c565b919050565b6000604051905090565b600067ffffffffffffffff821115610a7857610a77610c58565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610ab082610acd565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610b15578082015181840152602081019050610afa565b83811115610b24576000848401525b50505050565b60006002820490506001821680610b4257607f821691505b60208210811415610b5657610b55610c29565b5b50919050565b610b6582610c87565b810181811067ffffffffffffffff82111715610b8457610b83610c58565b5b80604052505050565b6000610b9882610aed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bcb57610bca610bfa565b5b600182019050919050565b6000610be182610be8565b9050919050565b6000610bf382610c98565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610d2681610aa5565b8114610d3157600080fd5b50565b610d3d81610ac3565b8114610d4857600080fd5b5056fea26469706673582212203ab14f3c4fda3fdde7b5a426d97c269beec950abe2fbc299e116ce03171c8e0064736f6c63430008040033";

type MerkleWhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleWhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleWhitelist__factory extends ContractFactory {
  constructor(...args: MerkleWhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleWhitelist> {
    return super.deploy(overrides || {}) as Promise<MerkleWhitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MerkleWhitelist {
    return super.attach(address) as MerkleWhitelist;
  }
  override connect(signer: Signer): MerkleWhitelist__factory {
    return super.connect(signer) as MerkleWhitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleWhitelistInterface {
    return new utils.Interface(_abi) as MerkleWhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleWhitelist {
    return new Contract(address, _abi, signerOrProvider) as MerkleWhitelist;
  }
}
